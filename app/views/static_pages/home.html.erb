<div class="container-fluid">
  <div class="row">
    <div class="theme-bg">
      <span class="theme">
        好きなスイーツを<br class="d-sm-none">Shareしましょう！
      </span>
    </div>
  </div>
  <!--表示切替ボタン-->
  <div id="naviParent">
    <div class="row" id="changing_display_order_button">
      <div class="col-md-6 offset-md-3">
        <% option = session[:option] %>
        <div>
          <%= react_component('changing_display_order_button', option: option) %>
        </div>
      </div>
    </div>
  </div>
  <!--カテゴリ、記事一覧-->
  <div class="row">
    <div class="col-lg-3">
      <%= render 'shared/category' %>
    </div>
    <div class="col-lg-6">
      <div class="articles">
        <ul>
          <%= render @articles %>
        </ul>
      </div>
      <div class="pagination", data-turbolinks="false">
        <%= paginate @articles %>
      </div>
    </div>
  </div>
</div>
<script>
  $(document).on('turbolinks:load', function() {
    const button = $('#changing_display_order_button');
    const naviParent = $('#naviParent');
    const navbar = $('.navbar');
    const sidebar = $('.sidebar');
    const reference = $('.reference');

    function removeClass()
    {
      button.removeClass('fixed_button');
      naviParent.removeClass('fixed_naviParent');
      sidebar.removeClass('fixed_sidebar');
      reference.removeClass('fixed_reference');
    }

    function addClass(){
      button.addClass('fixed_button');
      naviParent.addClass('fixed_naviParent');
      sidebar.addClass('fixed_sidebar')
      reference.addClass('fixed_reference');
    }

    function initialize()
    {
      let d = new $.Deferred;

      removeClass();
      scrollTo(0, 0);

      d.resolve();
      return d.promise();
    }

    const promise = initialize();

    promise.then(function(){
      const themeHeight = $('.theme-bg').height();

      $(window).scroll(function () {
        if($(window).scrollTop() >= themeHeight) {
          addClass();
        } else {
          removeClass();
        }
        if(window.matchMedia("(max-width:991px)").matches){
          $('.sidebar').removeClass('fixed_sidebar');
        }
      });

      $(window).resize(function() {
        if($(window).scrollTop() >= themeHeight) {
          $('.sidebar').addClass('fixed_sidebar');
        }
        if(window.matchMedia("(max-width:991px)").matches){
          $('.sidebar').removeClass('fixed_sidebar');
        }
      });
    });
  });

  window.addEventListener("popstate", function() {
    window.location.reload();
  });
</script>